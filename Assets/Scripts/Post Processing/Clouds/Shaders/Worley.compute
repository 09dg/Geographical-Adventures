#pragma kernel CSMain
#include "Assets/Scripts/Shader Common/Math.hlsl"

float worley3D(uint3 cell, uint numCells) {
	float minDst = 1.#INF;

	for (int z = -1; z <= 1; z ++) {
		for (int y = -1; y <= 1; y ++) {
			for (int x = -1; x <= 1; x ++) {
				int3 offset = int3(x, y, z);
				uint3 seed = (cell + offset + numCells) % numCells;

				//float3 p = cell + offset + randomPointInCube(seed) * 0.5;
				//float dst = length(cell, p);
			}
		}
	}
}

// Create a RenderTexture with enableRandomWrite flag and set it
// with cs.SetTexture
RWTexture2D<float4> Result;

[numthreads(8,8,1)]
void CSMain (uint3 id : SV_DispatchThreadID)
{
    // TODO: insert actual code here!

    Result[id.xy] = float4(id.x & id.y, (id.x & 15)/15.0, (id.y & 15)/15.0, 0.0);
}
